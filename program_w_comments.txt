//*
RAM:
160
160
325
160

274
43
439
43

160
325
325
325

247
207
439
207

160
160
160
325

325
160
325
325

274
43
274
207

439
43
439
207

160
160
274
43

325
160
439
43

160
325
274
207

325
325
439
207

*//

START:
MOVE r0, 0
MOVE r1, 12

DRAW_NEXT_LINE:
CMPE r0, r1
BIGD END
MOVE r3, 4
CMPE r0, r3
MEQD DRAW_HORIZONTAL_LINE_GET_POS
SUMI r3, r3, 4
CMPE r0, r3
MEQD DRAW_VERTICAL_LINE_GET_POS

DRAW_BRENSENHAM_LINE_GET_POS:
MOVE r4, 0
MULI r6, r0, 4
OMMV r0, [r6, 50]
ABDV r1, r0		//abs_v dir_v
MOVE r4, 0
MOVE r4, 0
MOVE r4, 0
ERRV r2, r1 		//Error
GMMV r1, [r4, 0]
GMMV r2, [r4, 4]
OMME r5, [r4, 50]	//x1
OMME r6, [r4, 51]	//y1
OMME r7, [r4, 52]	//x2
OMME r8, [r4, 53]	//y2
OMME r9, [r4, 4]	//error
DRAW_BRENSENHAM_LINE:
MOVE r4, 255
SUMI r11, r5, 0			//R10 es la posición en mem de x(r5)
MULI r10, r6, 640		//R9 es la posición en mem de y(r6) * 640 de punto 1
SUMR r10, r10, r11		//R9 es x + 640 * y
GMME r4, [r10, 90]
CMPE r5, r7
BIGD BRENSENHAM_LINE_X_IG
DRAW_BRENSENHAM_LINE_LOOP:
MULI r10, r9, 2
MOVE r4, 0
OMME r11, [r4, 1]		//dxy[2]
OMME r12, [r4, 39]		//-1
MULR r12, r12, r11
CMPE r10, r12
MAQD DRAW_BRENSENHAM_IF_ONE
OMME r11, [r4, 0]
CMPE r10, r11
MEQD DRAW_BRENSENHAM_IF_TWO
CMPE r10, r10
BIGA DRAW_BRENSENHAM_LINE

DRAW_BRENSENHAM_IF_ONE:
RESR r9, r9, r11 
OMME r11, [r4, 2]
SUMR r5, r5, r11
OMME r11, [r4, 0]
CMPE r10, r11
MEQD DRAW_BRENSENHAM_IF_TWO
CMPE r5, r5
BIGA DRAW_BRENSENHAM_LINE


DRAW_BRENSENHAM_IF_TWO:
SUMR r9, r9, r11
OMME r10, [r4, 3]
SUMR r6, r6, r10
CMPE r5, r5
BIGA DRAW_BRENSENHAM_LINE
BRENSENHAM_LINE_X_IG:
CMPE r6, r8
BIGD LINE_END
BNIA DRAW_BRENSENHAM_LINE_LOOP

DRAW_HORIZONTAL_LINE_GET_POS:
MOVE r4, 255
MULI r6, r0, 4
OMME r5, [r6, 50]		//x1
OMME r7, [r6, 52]		//x2
OMME r6, [r6, 51]		//y

DRAW_HORIZONTAL_LINE:
SUMI r9, r5, 0			//R9 es la posición en mem de x(r5)
MULI r8, r6, 640		//R8 es la posición en mem de y(r6) * 640 de punto 1
SUMR r8, r8, r9			//R8 es x + 640 * y
GMME r4, [r8, 90]		//R8 es x actual
SUMI r5, r5, 1			//Update del x de linea  Cuidado con direccion de linea izqueirda primero
CMPE r5, r7			//R7 pos x de punto 2
BNIA DRAW_HORIZONTAL_LINE
BIGD LINE_END
DRAW_VERTICAL_LINE_GET_POS:
MOVE r4, 255
MULI r6, r0, 4
OMME r5, [r6, 50]	//x	
OMME r7, [r6, 53]	//y2
OMME r6, [r6, 51]	//y1

DRAW_VERTICAL_LINE:
SUMI r9, r5, 0			//R9 es la posición en mem de x(r5)
MULI r8, r6, 640		//R8 es la posición en mem de y(r6) * 640 de punto 1
SUMR r8, r8, r9			//R8 es x + 640 * y
GMME r4, [r8, 90]		//R8 es x actual
SUMI r6, r6, 1			//Update del x de linea  Cuidado con direccion de linea arriba primero
CMPE r6, r7			//R7 pos x de punto 2
BNIA DRAW_VERTICAL_LINE
LINE_END:
SUMI r0, r0, 1
CMPE r0, r0
BIGA DRAW_NEXT_LINE
END:
MOVE r0, 0
MOVE r1, 0

